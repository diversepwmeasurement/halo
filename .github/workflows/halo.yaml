concurrency:
  cancel-in-progress: true
  group: ${{github.workflow}} - ${{github.ref}}
jobs:
  build:
    if: always() && (needs.test.result == 'skipped' || needs.test.result == 'success')
    needs: test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup Environment
      uses: ./.github/actions/setup-env
    - continue-on-error: true
      if: github.event_name == 'release'
      name: Reset version of Halo
      run: '# Set the version with tag name when releasing

        version=${{ github.event.release.tag_name }}

        version=${version#v}

        sed -i "s/version=.*-SNAPSHOT$/version=$version/1" gradle.properties

        '
      shell: bash
    - continue-on-error: true
      name: Build Halo
      run: ./gradlew clean && ./gradlew downloadPluginPresets && ./gradlew build -x
        check
    - continue-on-error: true
      if: github.repository == 'halo-dev/halo'
      name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: halo-artifacts
        path: application/build/libs
        retention-days: 1
  docker-build-and-push:
    if: always() && needs.build.result == 'success' && (github.event_name == 'push'
      || github.event_name == 'release')
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: halo-artifacts
        path: application/build/libs
    - continue-on-error: true
      name: Docker Buildx and Push
      uses: ./.github/actions/docker-buildx-push
      with:
        dockerhub-token: ${{ secrets.DOCKER_TOKEN }}
        dockerhub-user: ${{ secrets.DOCKER_USERNAME }}
        ghcr-token: ${{ secrets.GITHUB_TOKEN }}
        image-name: ${{ github.event_name == 'release' && 'halo' || 'halo-dev' }}
        platforms: linux/amd64,linux/arm64/v8,linux/ppc64le,linux/s390x
        push: true
  e2e-test:
    if: always() && needs.build.result == 'success' && (github.event_name == 'pull_request'
      || github.event_name == 'push')
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: halo-artifacts
        path: application/build/libs
    - continue-on-error: true
      name: Docker Build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ghcr.io/halo-dev/halo-dev:main
    - continue-on-error: true
      name: E2E Testing
      run: 'sudo curl -L https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64
        -o /usr/local/bin/docker-compose

        sudo chmod u+x /usr/local/bin/docker-compose

        cd e2e && make all

        '
  github-release:
    if: always() && needs.build.result == 'success' && github.event_name == 'release'
    needs: build
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: halo-artifacts
        path: application/build/libs
    - continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.repository == 'halo-dev/halo'
      name: Upload Artifacts
      run: gh release upload ${{ github.event.release.tag_name }} application/build/libs/*
  test:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Setup Environment
      uses: ./.github/actions/setup-env
    - continue-on-error: true
      name: Check Halo
      run: ./gradlew check
    - continue-on-error: true
      if: github.repository == 'halo-dev/halo'
      name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
name: Halo Workflow
on:
  repository_dispatch:
    types: trigger-ga___halo.yaml
